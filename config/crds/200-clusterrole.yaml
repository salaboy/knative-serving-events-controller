# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-events-admin
  labels:
    samples.knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      samples.knative.dev/controller: "true"
rules: [] # Rules are automatically filled in by the controller manager.

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-events-core
  labels:
    samples.knative.dev/release: devel
    samples.knative.dev/controller: "true"
rules:
  # Allow creating events associated with resources we are controlling.
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]

  # Allow us to reconcile our resources.
  - apiGroups: ["serving.knative.dev"]
    resources: ["*"]
    verbs: ["get", "list", "update", "watch", "patch"]

  # The webhook configured the namespace as the OwnerRef on various cluster-scoped resources,
  # which requires we can Get the system namespace.
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get"]
    resourceNames: ["knative-samples"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # A separate cluster role for the things actually needed by this
  # controller's contrived examples.
  name: knative-serving-events-resources
  labels:
    samples.knative.dev/release: devel
    samples.knative.dev/controller: "true"
rules:
  # AddressableService tracks services, so it needs to be able to list
  # and watch those in whatever namespace folks create those CRDs in
  # to do its job.
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch"]

  # SimpleDeployment creates and manages Pods, so it needs broad
  # permissions on pods
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "get", "list", "update", "delete", "watch"]
